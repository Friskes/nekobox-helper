name: Build PyInstaller Binaries

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true

permissions:
  contents: write

jobs:
  build-windows:
    if: github.actor == 'Friskes'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check if artifact already exists in releases
        shell: bash
        run: |
          VERSION=vpn_configurator_v${{ github.event.inputs.version }}.exe
          echo "Checking if release contains $VERSION"
          EXISTS=$(curl -s -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            | jq -e '.[] | select(.assets[].name == "'$VERSION'")' > /dev/null && echo yes || echo no)
          if [ "$EXISTS" = "yes" ]; then
            echo "Artifact already exists. Skipping build."
            exit 0
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version-file: '.python-version'

      - uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: |
            venv
          key: ${{ runner.os }}-venv-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/*requirements_dev.txt') }}

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          venv\Scripts\pip install --upgrade pip
          venv\Scripts\pip install -r requirements_dev.txt

      - name: Build Windows binary
        run: |
          venv\Scripts\pyinstaller -F vpn_configurator.py

      - name: Rename binary with version
        run: |
          mv dist/vpn_configurator.exe vpn_configurator_v${{ github.event.inputs.version }}.exe

      - uses: actions/upload-artifact@v4
        with:
          name: vpn_configurator_windows
          path: vpn_configurator_v${{ github.event.inputs.version }}.exe

  build-macos-x86:
    if: github.actor == 'Friskes'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check if artifact already exists in releases
        shell: bash
        run: |
          VERSION=vpn_configurator_v${{ github.event.inputs.version }}.macos-x86_64
          echo "Checking if release contains $VERSION"
          EXISTS=$(curl -s -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            | jq -e '.[] | select(.assets[].name == "'$VERSION'")' > /dev/null && echo yes || echo no)
          if [ "$EXISTS" = "yes" ]; then
            echo "Artifact already exists. Skipping build."
            exit 0
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version-file: '.python-version'

      - uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: |
            venv
          key: ${{ runner.os }}-venv-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/*requirements_dev.txt') }}

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements_dev.txt

      - name: Build macOS binary
        run: |
          . venv/bin/activate
          pyinstaller -F vpn_configurator.py

      - name: Rename binary with version
        run: |
          mv dist/vpn_configurator vpn_configurator_v${{ github.event.inputs.version }}.macos-x86_64

      - uses: actions/upload-artifact@v4
        with:
          name: vpn_configurator_macos_x86_64
          path: vpn_configurator_v${{ github.event.inputs.version }}.macos-x86_64

  publish-release:
    if: github.actor == 'Friskes'
    needs: [build-windows, build-macos-x86]
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: vpn_configurator_windows
          path: artifacts/

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: vpn_configurator_macos_x86_64
          path: artifacts/

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          files: |
            artifacts/vpn_configurator_v${{ github.event.inputs.version }}.exe
            artifacts/vpn_configurator_v${{ github.event.inputs.version }}.macos-x86_64
